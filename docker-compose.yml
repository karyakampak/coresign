version: '3.8'

services:
  load_balancer:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app_server1
      - app_server2
    networks:
      - app-network

  app_server1:
      build: ./app_server
      ports:
        - "5001:91"
      volumes:
        - ./app_server/s1:/var/www/html
        - ./csr:/home/csr
        - ./cert:/home/cert
        - ./key:/home/key
        - ./CA_cert:/home/CA_cert
        - ./p12:/home/p12
      networks: 
        - app-network

  app_server2:
      build: ./app_server
      ports:
        - "5002:92"
      volumes:
        - ./app_server/s2:/var/www/html
        - ./csr:/home/csr
        - ./cert:/home/cert
        - ./key:/home/key
        - ./CA_cert:/home/CA_cert
        - ./p12:/home/p12
      networks: 
        - app-network
        
  web_server-app:
      build: ./web_server
      ports:
        - "8080:81"
      volumes:
        - ./web_server/app:/var/www/html
        - ./csr:/home/csr
        - ./cert:/home/cert
        - ./key:/home/key
        - ./CA_cert:/home/CA_cert
        - ./p12:/home/p12
      networks: 
        - app-network

  database:
    image: postgres:latest
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql  # Optional: initialization script
    networks:
      - app-network

volumes:
  db_data:

networks:
  app-network:
    driver: bridge
